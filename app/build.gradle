plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def config = rootProject.ext.android
def version = rootProject.ext.version

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        applicationId config.applicationId

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

//      ndk {
//          // 'armeabi', 'armeabi-v7a', 'arm64-v8a' , 'x86' , 'x86_64', 'mips','mips64'
//          abiFilters 'armeabi-v7a'
//      }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def buildType = variant.getBuildType().getName()
            def releaseTime = new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
            outputFileName = "ando_template_v${defaultConfig.versionName}_${releaseTime}_${buildType}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'

        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.activity:activity-ktx:1.2.0-beta02'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    //implementation "androidx.cardview:cardview:1.0.0"

    //Permission
    implementation 'com.permissionx.guolindev:permissionx:1.4.0'
    //Glide        https://github.com/wasabeef/glide-transformations
    implementation "com.github.bumptech.glide:glide:$version.glide"
    kapt "com.github.bumptech.glide:compiler:$version.glide"
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    //Pull Refresh 57KB
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.1'
    implementation 'com.scwang.smart:refresh-header-material:2.0.1'
    implementation 'com.scwang.smart:refresh-footer-classics:2.0.1'
    // ImageView    round & circle
    //implementation 'com.makeramen:roundedimageview:2.3.0'
    //implementation 'de.hdodenhof:circleimageview:3.1.0'
    // GreenDao
    //implementation 'org.greenrobot:greendao:3.3.0'

    // OkHttp + retrofit + rxjava2
    api "com.squareup.okhttp3:okhttp:$version.okhttp"
    api "com.squareup.okhttp3:logging-interceptor:$version.okhttp"
    api "com.squareup.retrofit2:retrofit:$version.retrofit"
    api "com.squareup.retrofit2:converter-gson:$version.retrofit"
    //api 'io.reactivex.rxjava2:rxjava:2.2.21'
    //api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //api 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    //api "com.google.code.gson:gson:2.8.6"

    //My Architecture 1305KB
    //implementation 'ando.toolkit:toolkit:1.6.6'
    //implementation 'ando.library:library:1.6.6'
    //implementation "ando.file:core:$version.file_operator"
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'ando.webview:webview:3.0.0'
    implementation 'ando.dialog:core:1.3.0'
    implementation 'ando.dialog:usage:1.3.0'
    implementation 'ando.gallery:gallery:1.5.0'
    implementation 'ando.file:core:1.3.8'
    implementation 'ando.file:selector:1.3.8'
    implementation 'ando.file:compressor:1.3.8'
    implementation 'ando.file:android-q:1.3.8'

    implementation project(':ando_library')
    implementation project(':ando_toolkit')

}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // Try to turn them all off automatically
            options.compilerArgs << '-Xlint:none'
            options.compilerArgs << '-nowarn' // same as '-Xlint:none'

            // Turn them off manually
            options.compilerArgs << '-Xlint:-auxiliaryclass'
            options.compilerArgs << '-Xlint:-cast'
            options.compilerArgs << '-Xlint:-classfile'
            options.compilerArgs << '-Xlint:-deprecation'
            options.compilerArgs << '-Xlint:-dep-ann'
            options.compilerArgs << '-Xlint:-divzero'
            options.compilerArgs << '-Xlint:-empty'
            options.compilerArgs << '-Xlint:-fallthrough'
            options.compilerArgs << '-Xlint:-finally'
            options.compilerArgs << '-Xlint:-options'
            options.compilerArgs << '-Xlint:-overloads'
            options.compilerArgs << '-Xlint:-overrides'
            options.compilerArgs << '-Xlint:-path'
            options.compilerArgs << '-Xlint:-processing'
            options.compilerArgs << '-Xlint:-rawtypes'
            options.compilerArgs << '-Xlint:-serial'
            options.compilerArgs << '-Xlint:-static'
            options.compilerArgs << '-Xlint:-try'
            options.compilerArgs << '-Xlint:-unchecked'
            options.compilerArgs << '-Xlint:-varargs'
        }
    }
}